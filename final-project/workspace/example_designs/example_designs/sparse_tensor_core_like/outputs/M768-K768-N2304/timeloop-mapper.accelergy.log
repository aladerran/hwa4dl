2025-05-08 04:10:44 INFO            _                _                      
2025-05-08 04:10:44 INFO           / \   ___ ___ ___| | ___ _ __ __ _ _   _ 
2025-05-08 04:10:44 INFO          / _ \ / __/ __/ _ \ |/ _ \ '__/ _` | | | |
2025-05-08 04:10:44 INFO         / ___ \ (_| (_|  __/ |  __/ | | (_| | |_| |
2025-05-08 04:10:44 INFO        /_/   \_\___\___\___|_|\___|_|  \__, |\__, |
2025-05-08 04:10:44 INFO                                        |___/ |___/ 
2025-05-08 04:10:44 INFO        generating outputs according to the following specified output flags... 
2025-05-08 04:10:44 INFO         Please use the -f flag to update the preference (default to all output files)
2025-05-08 04:10:44 INFO        {'ERT': 1, 'ERT_summary': 1, 'ART': 1, 'ART_summary': 1, 'energy_estimation': 1, 'flattened_arch': 1}
2025-05-08 04:10:44 INFO        Located config file at /root/.config/accelergy/accelergy_config.yaml.
2025-05-08 04:10:44 INFO        config file located:
2025-05-08 04:10:44 INFO        /root/.config/accelergy/accelergy_config.yaml
2025-05-08 04:10:44 INFO        YAML Setting environment variable TIMELOOP_HIDE_INCONSEQUENTIAL_STATS to 1
2025-05-08 04:10:44 INFO        Parsing file /home/workspace/example_designs/example_designs/sparse_tensor_core_like/outputs/M768-K768-N2304/parsed-processed-input.yaml for architecture info
2025-05-08 04:10:44 INFO        Parsing file /home/workspace/example_designs/example_designs/sparse_tensor_core_like/outputs/M768-K768-N2304/parsed-processed-input.yaml for compound_components info
2025-05-08 04:10:44 INFO        YAML Setting environment variable TIMELOOP_HIDE_INCONSEQUENTIAL_STATS to 1
2025-05-08 04:10:44 INFO        Adding required action "update" to class DRAM
2025-05-08 04:10:44 INFO        Adding required action "read" to class DRAM
2025-05-08 04:10:44 INFO        Adding required action "leak" to class DRAM
2025-05-08 04:10:44 INFO        Adding required action "write" to class DRAM
2025-05-08 04:10:44 INFO        Calculated Architecture class smartbuffer_RF attributes"memory_width" as "max(32, width)" = 32.
2025-05-08 04:10:44 INFO        Calculated Architecture class smartbuffer_RF attributes"memory_depth" as "max(64, depth)" = 2048.
2025-05-08 04:10:44 INFO        Calculated Architecture class smartbuffer_RF attributes"widthscale" as "width / memory_width" = 0.25.
2025-05-08 04:10:44 INFO        Calculated Architecture class smartbuffer_RF attributes"depthscale" as "depth / memory_depth" = 1.0.
2025-05-08 04:10:44 INFO        Calculated Architecture class smartbuffer_RF attributes"real_depth" as "depth" = 2048.
2025-05-08 04:10:44 INFO        Calculated Architecture class smartbuffer_RF attributes"area_scale" as "widthscale * depthscale" = 0.25.
2025-05-08 04:10:44 INFO        Calculated Architecture class smartbuffer_RF attributes"dynamic_energy_scale" as "widthscale * (depthscale ** (1.56 / 2))" = 0.25.
2025-05-08 04:10:44 INFO        Calculated Architecture class smartbuffer_RF attributes"static_energy_scale" as "area_scale" = 0.25.
2025-05-08 04:10:44 WARNING     Area scale in attributes is deprecated. Use it on the same level as the attributes, not a subkey.
2025-05-08 04:10:44 INFO        Estimator plug-in identified by: /usr/local/share/accelergy/estimation_plug_ins/accelergy-adc-plug-in/adc.estimator.yaml
2025-05-08 04:10:44 INFO        Estimator plug-in identified by: /usr/local/share/accelergy/estimation_plug_ins/dummy_tables/dummy.estimator.yaml
2025-05-08 04:10:44 INFO        Estimator plug-in identified by: /usr/local/share/accelergy/estimation_plug_ins/accelergy-aladdin-plug-in/aladdin.estimator.yaml
2025-05-08 04:10:44 INFO        Estimator plug-in identified by: /usr/local/share/accelergy/estimation_plug_ins/accelergy-library-plugin/library.estimator.yaml
2025-05-08 04:10:44 INFO        Estimator plug-in identified by: /usr/local/share/accelergy/estimation_plug_ins/accelergy-table-based-plug-ins/table.estimator.yaml
2025-05-08 04:10:44 INFO        Estimator plug-in identified by: /usr/local/share/accelergy/estimation_plug_ins/accelergy-neurosim-plugin/neurosim.estimator.yaml
2025-05-08 04:10:44 INFO        Estimator plug-in identified by: /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti.estimator.yaml
2025-05-08 04:10:44 INFO        Loading Python plug-in: /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_wrapper.py. Errors below are likely due to plug-in, not Accelergy.
2025-05-08 04:10:44 INFO        Getting all estimators in module <module 'python_plug_in' from '/usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_wrapper.py'>
2025-05-08 04:10:44 INFO        Added estimator CactiCache that estimates cache with actions idle, read, read_access, update, update_access, write, write_access, leak
2025-05-08 04:10:44 INFO        Added estimator CactiDRAM that estimates ['DRAM', 'dram'] with actions idle, read, update, write, leak
2025-05-08 04:10:44 INFO        Added estimator CactiSRAM that estimates ['SRAM', 'sram'] with actions idle, read, update, write, leak
2025-05-08 04:10:44 INFO        Done loading Python plug-ins.
2025-05-08 04:10:44 INFO        Found estimator plug-in: ADC Plug-In (<ADCEstimator.ADCEstimator object at 0x7f77c0dcb760>)
2025-05-08 04:10:44 INFO        Found estimator plug-in: dummy (<DummyTable.DummyTable object at 0x7f77c0dc9de0>)
2025-05-08 04:10:44 INFO        Found estimator plug-in: Aladdin_table (<AladdinTable.AladdinTable object at 0x7f77c0d01960>)
2025-05-08 04:10:44 INFO        Found estimator plug-in: Library (<LibraryEstimator.LibraryEstimator object at 0x7f77c0d01510>)
2025-05-08 04:10:44 INFO        Found estimator plug-in: DEPRECATED table-based-plug-ins. Use the Library plug-in instead. (<SetsOfTables.SetsOfTables object at 0x7f77c0dcb430>)
2025-05-08 04:10:44 INFO        Found estimator plug-in: Neurosim Plug-In (<NeuroWrapper.NeuroWrapper object at 0x7f77c0dc8490>)
2025-05-08 04:10:44 INFO        Found estimator plug-in: CactiCache (<accelergy.plug_in_interface.estimator_wrapper.EstimatorWrapper object at 0x7f77c0bf3640>)
2025-05-08 04:10:44 INFO        Found estimator plug-in: CactiDRAM (<accelergy.plug_in_interface.estimator_wrapper.EstimatorWrapper object at 0x7f77c0bf35e0>)
2025-05-08 04:10:44 INFO        Found estimator plug-in: CactiSRAM (<accelergy.plug_in_interface.estimator_wrapper.EstimatorWrapper object at 0x7f77c0bf31f0>)
2025-05-08 04:10:44 INFO        Calculated storage."technology" as "technology" = 45nm.
2025-05-08 04:10:44 INFO        Calculated storage."width" as "width" = 256.
2025-05-08 04:10:44 INFO        Calculated storage."depth" as "depth" = 8192.
2025-05-08 04:10:44 INFO        Calculated storage."n_rdwr_ports" as "n_rdwr_ports" = 2.
2025-05-08 04:10:44 INFO        Calculated storage.storage."width" as "width" = 256.
2025-05-08 04:10:44 INFO        Calculated storage.storage."depth" as "depth" = 8192.
2025-05-08 04:10:44 INFO        Calculated storage.storage."n_rw_ports" as "n_rw_ports" = 1.
2025-05-08 04:10:44 INFO        Calculated storage.storage."technology" as "technology" = 45nm.
2025-05-08 04:10:44 INFO        Calculated storage.storage."global_cycle_seconds" as "global_cycle_seconds" = 1e-09.
2025-05-08 04:10:44 INFO        Calculated storage.address_generators[0..1]."n_bits" as "max(1, ceil(log2(depth))) if depth >= 1 else 1" = 13.
2025-05-08 04:10:44 INFO        Calculated storage.address_generators[0..1]."precision" as "max(1, ceil(log2(depth))) if depth >= 1 else 1" = 13.
2025-05-08 04:10:44 INFO        Calculated storage.address_generators[0..1]."width" as "max(1, ceil(log2(depth))) if depth >= 1 else 1" = 13.
2025-05-08 04:10:44 INFO        Calculated storage.address_generators[0..1]."global_cycle_seconds" as "global_cycle_seconds" = 1e-09.
2025-05-08 04:10:44 INFO        Calculated metadata_storage."technology" as "technology" = 45nm.
2025-05-08 04:10:44 INFO        Calculated metadata_storage."width" as "metadata_storage_width" = 64.
2025-05-08 04:10:44 INFO        Calculated metadata_storage."depth" as "metadata_storage_depth" = 8192.
2025-05-08 04:10:44 INFO        Calculated metadata_storage."n_rdwr_ports" as "n_rdwr_ports" = 2.
2025-05-08 04:10:44 INFO        Calculated metadata_storage.storage."width" as "width" = 64.
2025-05-08 04:10:44 INFO        Calculated metadata_storage.storage."depth" as "depth" = 8192.
2025-05-08 04:10:44 INFO        Calculated metadata_storage.storage."n_rw_ports" as "n_rw_ports" = 1.
2025-05-08 04:10:44 INFO        Calculated metadata_storage.storage."technology" as "technology" = 45nm.
2025-05-08 04:10:44 INFO        Calculated metadata_storage.storage."global_cycle_seconds" as "global_cycle_seconds" = 1e-09.
2025-05-08 04:10:44 INFO        Calculated metadata_storage.address_generators[0..1]."n_bits" as "max(1, ceil(log2(depth))) if depth >= 1 else 1" = 13.
2025-05-08 04:10:44 INFO        Calculated metadata_storage.address_generators[0..1]."precision" as "max(1, ceil(log2(depth))) if depth >= 1 else 1" = 13.
2025-05-08 04:10:44 INFO        Calculated metadata_storage.address_generators[0..1]."width" as "max(1, ceil(log2(depth))) if depth >= 1 else 1" = 13.
2025-05-08 04:10:44 INFO        Calculated metadata_storage.address_generators[0..1]."global_cycle_seconds" as "global_cycle_seconds" = 1e-09.
2025-05-08 04:10:44 INFO        Calculated metadata_counters[0..1]."technology" as "technology" = 45nm.
2025-05-08 04:10:44 INFO        Calculated metadata_counters[0..1]."width" as "metadata_counter_width" = 0.
2025-05-08 04:10:44 INFO        Calculated system_top_level.SMEM[1..1].leak.leak."global_cycle_seconds" as "global_cycle_seconds" = 1e-09.
2025-05-08 04:10:44 INFO        Calculated system_top_level.SMEM[1..1].leak.leak."global_cycle_seconds" as "global_cycle_seconds" = 1e-09.
2025-05-08 04:10:44 INFO        Calculated storage."width" as "memory_width" = 32.
2025-05-08 04:10:44 INFO        Calculated storage."depth" as "memory_depth" = 2048.
2025-05-08 04:10:44 INFO        Calculated storage."n_rdwr_ports" as "n_rdwr_ports" = 2.
2025-05-08 04:10:44 INFO        Calculated storage."global_cycle_seconds" as "global_cycle_seconds" = 1e-09.
2025-05-08 04:10:44 INFO        Calculated storage.area_scale as "area_scale" = 0.25.
2025-05-08 04:10:44 INFO        Calculated list index expression as "width*depth" = 65536.
2025-05-08 04:10:44 INFO        Calculated list index expression as "depth" = 2048.
2025-05-08 04:10:44 INFO        Calculated storage.storage[1..65536]."global_cycle_seconds" as "global_cycle_seconds" = 1e-09.
2025-05-08 04:10:44 INFO        Calculated storage.comparator[1..2048]."n_bits" as "max(1, ceil(log2(depth)))" = 11.
2025-05-08 04:10:44 INFO        Calculated storage.comparator[1..2048]."global_cycle_seconds" as "global_cycle_seconds" = 1e-09.
2025-05-08 04:10:44 INFO        Calculated address_generators[0..1]."n_bits" as "max(1, ceil(log2(real_depth))) if real_depth >= 1 else 1" = 11.
2025-05-08 04:10:44 INFO        Calculated address_generators[0..1]."precision" as "max(1, ceil(log2(real_depth))) if real_depth >= 1 else 1" = 11.
2025-05-08 04:10:44 INFO        Calculated address_generators[0..1]."width" as "max(1, ceil(log2(real_depth))) if real_depth >= 1 else 1" = 11.
2025-05-08 04:10:44 INFO        Calculated address_generators[0..1]."global_cycle_seconds" as "global_cycle_seconds" = 1e-09.
2025-05-08 04:10:44 INFO        Calculated action write energy_scale as "dynamic_energy_scale" = 0.25.
2025-05-08 04:10:44 INFO        Calculated list index expression as "width" = 32.
2025-05-08 04:10:44 INFO        Calculated list index expression as "depth" = 2048.
2025-05-08 04:10:44 INFO        Calculated action read energy_scale as "dynamic_energy_scale" = 0.25.
2025-05-08 04:10:44 INFO        Calculated list index expression as "width" = 32.
2025-05-08 04:10:44 INFO        Calculated list index expression as "depth" = 2048.
2025-05-08 04:10:44 INFO        Calculated action leak energy_scale as "static_energy_scale" = 0.25.
2025-05-08 04:10:44 INFO        Calculated list index expression as "width*depth" = 65536.
2025-05-08 04:10:44 INFO        Calculated system_top_level.RF[1..4].leak.leak."global_cycle_seconds" as "global_cycle_seconds" = 1e-09.
2025-05-08 04:10:44 INFO        Calculated list index expression as "depth" = 2048.
2025-05-08 04:10:44 INFO        Calculated system_top_level.RF[1..4].leak.leak."global_cycle_seconds" as "global_cycle_seconds" = 1e-09.
2025-05-08 04:10:44 INFO        Calculated action write energy_scale as "dynamic_energy_scale" = 0.25.
2025-05-08 04:10:44 INFO        Calculated list index expression as "width" = 32.
2025-05-08 04:10:44 INFO        Calculated list index expression as "depth" = 2048.
2025-05-08 04:10:44 INFO        Calculated storage."technology" as "technology" = 45nm.
2025-05-08 04:10:44 INFO        Calculated storage."width" as "width" = 8.
2025-05-08 04:10:44 INFO        Calculated storage."depth" as "depth" = 1.
2025-05-08 04:10:44 INFO        Calculated storage."n_rdwr_ports" as "n_rdwr_ports" = 1.
2025-05-08 04:10:44 INFO        Calculated storage.storage."width" as "width" = 8.
2025-05-08 04:10:44 INFO        Calculated storage.storage."depth" as "depth" = 1.
2025-05-08 04:10:44 INFO        Calculated storage.storage."n_rw_ports" as "n_rw_ports" = 1.
2025-05-08 04:10:44 INFO        Calculated storage.storage."technology" as "technology" = 45nm.
2025-05-08 04:10:44 INFO        Calculated storage.storage."global_cycle_seconds" as "global_cycle_seconds" = 1e-09.
2025-05-08 04:10:44 INFO        Calculated storage.address_generators[0..1]."n_bits" as "max(1, ceil(log2(depth))) if depth >= 1 else 1" = 1.
2025-05-08 04:10:44 INFO        Calculated storage.address_generators[0..1]."precision" as "max(1, ceil(log2(depth))) if depth >= 1 else 1" = 1.
2025-05-08 04:10:44 INFO        Calculated storage.address_generators[0..1]."width" as "max(1, ceil(log2(depth))) if depth >= 1 else 1" = 1.
2025-05-08 04:10:44 INFO        Calculated storage.address_generators[0..1]."global_cycle_seconds" as "global_cycle_seconds" = 1e-09.
2025-05-08 04:10:44 INFO        Calculated metadata_storage."technology" as "technology" = 45nm.
2025-05-08 04:10:44 INFO        Calculated metadata_storage."width" as "metadata_storage_width" = 8.
2025-05-08 04:10:44 INFO        Calculated metadata_storage."depth" as "metadata_storage_depth" = 1.
2025-05-08 04:10:44 INFO        Calculated metadata_storage."n_rdwr_ports" as "n_rdwr_ports" = 1.
2025-05-08 04:10:44 INFO        Calculated metadata_storage.storage."width" as "width" = 8.
2025-05-08 04:10:44 INFO        Calculated metadata_storage.storage."depth" as "depth" = 1.
2025-05-08 04:10:44 INFO        Calculated metadata_storage.storage."n_rw_ports" as "n_rw_ports" = 1.
2025-05-08 04:10:44 INFO        Calculated metadata_storage.storage."technology" as "technology" = 45nm.
2025-05-08 04:10:44 INFO        Calculated metadata_storage.storage."global_cycle_seconds" as "global_cycle_seconds" = 1e-09.
2025-05-08 04:10:44 INFO        Calculated metadata_storage.address_generators[0..1]."n_bits" as "max(1, ceil(log2(depth))) if depth >= 1 else 1" = 1.
2025-05-08 04:10:44 INFO        Calculated metadata_storage.address_generators[0..1]."precision" as "max(1, ceil(log2(depth))) if depth >= 1 else 1" = 1.
2025-05-08 04:10:44 INFO        Calculated metadata_storage.address_generators[0..1]."width" as "max(1, ceil(log2(depth))) if depth >= 1 else 1" = 1.
2025-05-08 04:10:44 INFO        Calculated metadata_storage.address_generators[0..1]."global_cycle_seconds" as "global_cycle_seconds" = 1e-09.
2025-05-08 04:10:44 INFO        Calculated metadata_counters[0..1]."technology" as "technology" = 45nm.
2025-05-08 04:10:44 INFO        Calculated metadata_counters[0..1]."width" as "metadata_counter_width" = 0.
2025-05-08 04:10:44 INFO        Calculated system_top_level.LRF[1..1024].leak.leak."global_cycle_seconds" as "global_cycle_seconds" = 1e-09.
2025-05-08 04:10:44 INFO        Calculated system_top_level.LRF[1..1024].leak.leak."global_cycle_seconds" as "global_cycle_seconds" = 1e-09.
2025-05-08 04:10:44 INFO        Calculated intadder."width" as "adder_width" = 16.
2025-05-08 04:10:44 INFO        Calculated intmultiplier."width_a" as "multiplier_width" = 8.
2025-05-08 04:10:44 INFO        Calculated intmultiplier."width_b" as "multiplier_width" = 8.
2025-05-08 04:10:44 INFO        
2025-05-08 04:10:44 INFO        ENERGY ESTIMATION for DRAM(type=LPDDR4, width=64, metadata_storage_width=64, datawidth=8, cluster_size=1, read_bandwidth=32, write_bandwidth=32, has_power_gating=False, n_banks=2, reduction_supported=True, multiple_buffering=1, min_utilization=0, allow_overbooking=False, meshX=1, meshY=1, technology=45nm, version=0.4, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).update(global_cycle_seconds=1e-09, action_latency_cycles=1)
2025-05-08 04:10:44 INFO        CactiDRAM estimated 5.12e-10 with accuracy 80%. Messages:
2025-05-08 04:10:44 INFO        | Unused arguments (metadata_storage_width, datawidth, cluster_size, read_bandwidth, write_bandwidth, has_power_gating, n_banks, reduction_supported, multiple_buffering, min_utilization, allow_overbooking, meshX, meshY, technology, version, global_cycle_seconds, action_latency_cycles, cycle_seconds, n_instances) provided for ['DRAM', 'dram'].__init__. Arguments used: (type, width)
2025-05-08 04:10:44 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles) provided for ['DRAM', 'dram'].update. Arguments used: ()
2025-05-08 04:10:44 INFO        
2025-05-08 04:10:44 INFO        ENERGY ESTIMATION for DRAM(type=LPDDR4, width=64, metadata_storage_width=64, datawidth=8, cluster_size=1, read_bandwidth=32, write_bandwidth=32, has_power_gating=False, n_banks=2, reduction_supported=True, multiple_buffering=1, min_utilization=0, allow_overbooking=False, meshX=1, meshY=1, technology=45nm, version=0.4, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).read(global_cycle_seconds=1e-09, action_latency_cycles=1)
2025-05-08 04:10:44 INFO        CactiDRAM estimated 5.12e-10 with accuracy 80%. Messages:
2025-05-08 04:10:44 INFO        | Unused arguments (metadata_storage_width, datawidth, cluster_size, read_bandwidth, write_bandwidth, has_power_gating, n_banks, reduction_supported, multiple_buffering, min_utilization, allow_overbooking, meshX, meshY, technology, version, global_cycle_seconds, action_latency_cycles, cycle_seconds, n_instances) provided for ['DRAM', 'dram'].__init__. Arguments used: (type, width)
2025-05-08 04:10:44 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles) provided for ['DRAM', 'dram'].read. Arguments used: ()
2025-05-08 04:10:44 INFO        
2025-05-08 04:10:44 INFO        ENERGY ESTIMATION for DRAM(type=LPDDR4, width=64, metadata_storage_width=64, datawidth=8, cluster_size=1, read_bandwidth=32, write_bandwidth=32, has_power_gating=False, n_banks=2, reduction_supported=True, multiple_buffering=1, min_utilization=0, allow_overbooking=False, meshX=1, meshY=1, technology=45nm, version=0.4, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).leak(global_cycle_seconds=1e-09, action_latency_cycles=1)
2025-05-08 04:10:44 INFO        CactiDRAM estimated 0 with accuracy 80%. Messages:
2025-05-08 04:10:44 INFO        | Unused arguments (metadata_storage_width, datawidth, cluster_size, read_bandwidth, write_bandwidth, has_power_gating, n_banks, reduction_supported, multiple_buffering, min_utilization, allow_overbooking, meshX, meshY, technology, version, global_cycle_seconds, action_latency_cycles, cycle_seconds, n_instances) provided for ['DRAM', 'dram'].__init__. Arguments used: (type, width)
2025-05-08 04:10:44 INFO        | Unused arguments (action_latency_cycles) provided for ['DRAM', 'dram'].leak. Arguments used: (global_cycle_seconds)
2025-05-08 04:10:44 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:44 INFO        
2025-05-08 04:10:44 INFO        ENERGY ESTIMATION for DRAM(type=LPDDR4, width=64, metadata_storage_width=64, datawidth=8, cluster_size=1, read_bandwidth=32, write_bandwidth=32, has_power_gating=False, n_banks=2, reduction_supported=True, multiple_buffering=1, min_utilization=0, allow_overbooking=False, meshX=1, meshY=1, technology=45nm, version=0.4, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).write(global_cycle_seconds=1e-09, action_latency_cycles=1)
2025-05-08 04:10:44 INFO        CactiDRAM estimated 5.12e-10 with accuracy 80%. Messages:
2025-05-08 04:10:44 INFO        | Unused arguments (metadata_storage_width, datawidth, cluster_size, read_bandwidth, write_bandwidth, has_power_gating, n_banks, reduction_supported, multiple_buffering, min_utilization, allow_overbooking, meshX, meshY, technology, version, global_cycle_seconds, action_latency_cycles, cycle_seconds, n_instances) provided for ['DRAM', 'dram'].__init__. Arguments used: (type, width)
2025-05-08 04:10:44 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles) provided for ['DRAM', 'dram'].write. Arguments used: ()
2025-05-08 04:10:44 INFO        
2025-05-08 04:10:44 INFO        ENERGY ESTIMATION for SRAM(width=256, depth=8192, n_rw_ports=1, technology=45nm, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).read(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:46 INFO        CactiSRAM estimated 1.2461e-10 with accuracy 80%. Messages:
2025-05-08 04:10:46 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, n_instances) provided for ['SRAM', 'sram'].__init__. Arguments used: (width, depth, n_rw_ports, technology)
2025-05-08 04:10:46 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, technology, n_instances) provided for ['SRAM', 'sram'].read. Arguments used: ()
2025-05-08 04:10:46 INFO        | Calling CACTI with cache_size=262144 n_rw_ports=1 block_size=32 tech_node_um=0.045 n_banks=1 tag_size=0 associativity=1
2025-05-08 04:10:46 INFO        | Calling CACTI with input path /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpfkctbj6l
2025-05-08 04:10:46 INFO        | CACTI output will be written to /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpize0z8g1
2025-05-08 04:10:46 INFO        | CACTI executable not found at /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti/cacti
2025-05-08 04:10:46 INFO        | Calling: cd /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in ; ./cacti -infile /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpfkctbj6l >> /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpize0z8g1 2>&1
2025-05-08 04:10:46 INFO        | Cache bandwidth: 32.0 bytes/cycle
2025-05-08 04:10:46 INFO        | Cache bandwidth: 74205909805.03555 bits/second
2025-05-08 04:10:46 INFO        
2025-05-08 04:10:46 INFO        ENERGY ESTIMATION for intadder(n_bits=13, precision=13, width=13, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).add(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:46 INFO        Aladdin_table estimated 0.0853125p with accuracy 70%. 
2025-05-08 04:10:46 INFO        
2025-05-08 04:10:46 INFO        ENERGY ESTIMATION for SRAM(width=256, depth=8192, n_rw_ports=1, technology=45nm, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).write(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:47 INFO        CactiSRAM estimated 1.18033e-10 with accuracy 80%. Messages:
2025-05-08 04:10:47 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, n_instances) provided for ['SRAM', 'sram'].__init__. Arguments used: (width, depth, n_rw_ports, technology)
2025-05-08 04:10:47 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, technology, n_instances) provided for ['SRAM', 'sram'].write. Arguments used: ()
2025-05-08 04:10:47 INFO        | Calling CACTI with cache_size=262144 n_rw_ports=1 block_size=32 tech_node_um=0.045 n_banks=1 tag_size=0 associativity=1
2025-05-08 04:10:47 INFO        | Calling CACTI with input path /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpks_10uth
2025-05-08 04:10:47 INFO        | CACTI output will be written to /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpviamzawx
2025-05-08 04:10:47 INFO        | CACTI executable not found at /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti/cacti
2025-05-08 04:10:47 INFO        | Calling: cd /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in ; ./cacti -infile /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpks_10uth >> /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpviamzawx 2>&1
2025-05-08 04:10:47 INFO        | Cache bandwidth: 32.0 bytes/cycle
2025-05-08 04:10:47 INFO        | Cache bandwidth: 74205909805.03555 bits/second
2025-05-08 04:10:47 INFO        
2025-05-08 04:10:47 INFO        ENERGY ESTIMATION for intadder(n_bits=13, precision=13, width=13, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).add(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:47 INFO        Aladdin_table estimated 0.0853125p with accuracy 70%. 
2025-05-08 04:10:47 INFO        
2025-05-08 04:10:47 INFO        ENERGY ESTIMATION for SRAM(width=256, depth=8192, n_rw_ports=1, technology=45nm, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).write(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:48 INFO        CactiSRAM estimated 1.18033e-10 with accuracy 80%. Messages:
2025-05-08 04:10:48 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, n_instances) provided for ['SRAM', 'sram'].__init__. Arguments used: (width, depth, n_rw_ports, technology)
2025-05-08 04:10:48 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, technology, n_instances) provided for ['SRAM', 'sram'].write. Arguments used: ()
2025-05-08 04:10:48 INFO        | Calling CACTI with cache_size=262144 n_rw_ports=1 block_size=32 tech_node_um=0.045 n_banks=1 tag_size=0 associativity=1
2025-05-08 04:10:48 INFO        | Calling CACTI with input path /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpnq9kg5d2
2025-05-08 04:10:48 INFO        | CACTI output will be written to /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp03v0oymu
2025-05-08 04:10:48 INFO        | CACTI executable not found at /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti/cacti
2025-05-08 04:10:48 INFO        | Calling: cd /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in ; ./cacti -infile /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpnq9kg5d2 >> /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp03v0oymu 2>&1
2025-05-08 04:10:48 INFO        | Cache bandwidth: 32.0 bytes/cycle
2025-05-08 04:10:48 INFO        | Cache bandwidth: 74205909805.03555 bits/second
2025-05-08 04:10:48 INFO        
2025-05-08 04:10:48 INFO        ENERGY ESTIMATION for intadder(n_bits=13, precision=13, width=13, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).add(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:48 INFO        Aladdin_table estimated 0.0853125p with accuracy 70%. 
2025-05-08 04:10:48 INFO        
2025-05-08 04:10:48 INFO        ENERGY ESTIMATION for SRAM(width=64, depth=8192, n_rw_ports=1, technology=45nm, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).read(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:49 INFO        CactiSRAM estimated 2.5869500000000002e-11 with accuracy 80%. Messages:
2025-05-08 04:10:49 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, n_instances) provided for ['SRAM', 'sram'].__init__. Arguments used: (width, depth, n_rw_ports, technology)
2025-05-08 04:10:49 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, technology, n_instances) provided for ['SRAM', 'sram'].read. Arguments used: ()
2025-05-08 04:10:49 INFO        | Calling CACTI with cache_size=65536 n_rw_ports=1 block_size=8 tech_node_um=0.045 n_banks=1 tag_size=0 associativity=1
2025-05-08 04:10:49 INFO        | Calling CACTI with input path /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpplyatvnb
2025-05-08 04:10:49 INFO        | CACTI output will be written to /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp7tcpmszs
2025-05-08 04:10:49 INFO        | CACTI executable not found at /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti/cacti
2025-05-08 04:10:49 INFO        | Calling: cd /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in ; ./cacti -infile /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpplyatvnb >> /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp7tcpmszs 2>&1
2025-05-08 04:10:49 INFO        | Cache bandwidth: 8.0 bytes/cycle
2025-05-08 04:10:49 INFO        | Cache bandwidth: 38765559223.477394 bits/second
2025-05-08 04:10:49 INFO        
2025-05-08 04:10:49 INFO        ENERGY ESTIMATION for intadder(n_bits=13, precision=13, width=13, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).add(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:49 INFO        Aladdin_table estimated 0.0853125p with accuracy 70%. 
2025-05-08 04:10:49 INFO        
2025-05-08 04:10:49 INFO        ENERGY ESTIMATION for SRAM(width=64, depth=8192, n_rw_ports=1, technology=45nm, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).write(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:50 INFO        CactiSRAM estimated 1.96486e-11 with accuracy 80%. Messages:
2025-05-08 04:10:50 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, n_instances) provided for ['SRAM', 'sram'].__init__. Arguments used: (width, depth, n_rw_ports, technology)
2025-05-08 04:10:50 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, technology, n_instances) provided for ['SRAM', 'sram'].write. Arguments used: ()
2025-05-08 04:10:50 INFO        | Calling CACTI with cache_size=65536 n_rw_ports=1 block_size=8 tech_node_um=0.045 n_banks=1 tag_size=0 associativity=1
2025-05-08 04:10:50 INFO        | Calling CACTI with input path /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpngpdy84_
2025-05-08 04:10:50 INFO        | CACTI output will be written to /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpe9j6dy2g
2025-05-08 04:10:50 INFO        | CACTI executable not found at /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti/cacti
2025-05-08 04:10:50 INFO        | Calling: cd /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in ; ./cacti -infile /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpngpdy84_ >> /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpe9j6dy2g 2>&1
2025-05-08 04:10:50 INFO        | Cache bandwidth: 8.0 bytes/cycle
2025-05-08 04:10:50 INFO        | Cache bandwidth: 38765559223.477394 bits/second
2025-05-08 04:10:50 INFO        
2025-05-08 04:10:50 INFO        ENERGY ESTIMATION for intadder(n_bits=13, precision=13, width=13, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).add(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:50 INFO        Aladdin_table estimated 0.0853125p with accuracy 70%. 
2025-05-08 04:10:50 INFO        
2025-05-08 04:10:50 INFO        ENERGY ESTIMATION for SRAM(width=64, depth=8192, n_rw_ports=1, technology=45nm, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).write(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:51 INFO        CactiSRAM estimated 1.96486e-11 with accuracy 80%. Messages:
2025-05-08 04:10:51 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, n_instances) provided for ['SRAM', 'sram'].__init__. Arguments used: (width, depth, n_rw_ports, technology)
2025-05-08 04:10:51 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, technology, n_instances) provided for ['SRAM', 'sram'].write. Arguments used: ()
2025-05-08 04:10:51 INFO        | Calling CACTI with cache_size=65536 n_rw_ports=1 block_size=8 tech_node_um=0.045 n_banks=1 tag_size=0 associativity=1
2025-05-08 04:10:51 INFO        | Calling CACTI with input path /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpir0wzcti
2025-05-08 04:10:51 INFO        | CACTI output will be written to /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp3zwhy5jh
2025-05-08 04:10:51 INFO        | CACTI executable not found at /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti/cacti
2025-05-08 04:10:51 INFO        | Calling: cd /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in ; ./cacti -infile /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpir0wzcti >> /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp3zwhy5jh 2>&1
2025-05-08 04:10:51 INFO        | Cache bandwidth: 8.0 bytes/cycle
2025-05-08 04:10:51 INFO        | Cache bandwidth: 38765559223.477394 bits/second
2025-05-08 04:10:51 INFO        
2025-05-08 04:10:51 INFO        ENERGY ESTIMATION for intadder(n_bits=13, precision=13, width=13, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).add(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:51 INFO        Aladdin_table estimated 0.0853125p with accuracy 70%. 
2025-05-08 04:10:51 INFO        
2025-05-08 04:10:51 INFO        ENERGY ESTIMATION for SRAM(width=256, depth=8192, n_rw_ports=1, technology=45nm, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).leak(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:53 INFO        CactiSRAM estimated 6.23184e-15 with accuracy 80%. Messages:
2025-05-08 04:10:53 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, n_instances) provided for ['SRAM', 'sram'].__init__. Arguments used: (width, depth, n_rw_ports, technology)
2025-05-08 04:10:53 INFO        | Unused arguments (action_latency_cycles, cycle_seconds, technology, n_instances) provided for ['SRAM', 'sram'].leak. Arguments used: (global_cycle_seconds)
2025-05-08 04:10:53 INFO        | Calling CACTI with cache_size=262144 n_rw_ports=1 block_size=32 tech_node_um=0.045 n_banks=1 tag_size=0 associativity=1
2025-05-08 04:10:53 INFO        | Calling CACTI with input path /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpmih6mo7_
2025-05-08 04:10:53 INFO        | CACTI output will be written to /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpt6mjnxi8
2025-05-08 04:10:53 INFO        | CACTI executable not found at /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti/cacti
2025-05-08 04:10:53 INFO        | Calling: cd /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in ; ./cacti -infile /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpmih6mo7_ >> /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpt6mjnxi8 2>&1
2025-05-08 04:10:53 INFO        | Cache bandwidth: 32.0 bytes/cycle
2025-05-08 04:10:53 INFO        | Cache bandwidth: 74205909805.03555 bits/second
2025-05-08 04:10:53 INFO        | Global cycle time 1e-09 is less than the cache's random cycle time 3.4498600000000003e-09
2025-05-08 04:10:53 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:53 INFO        
2025-05-08 04:10:53 INFO        ENERGY ESTIMATION for intadder(n_bits=13, precision=13, width=13, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).leak(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:53 INFO        Aladdin_table estimated 0.000934375p with accuracy 70%. Messages:
2025-05-08 04:10:53 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:53 INFO        
2025-05-08 04:10:53 INFO        ENERGY ESTIMATION for SRAM(width=64, depth=8192, n_rw_ports=1, technology=45nm, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).leak(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        CactiSRAM estimated 1.67027e-15 with accuracy 80%. Messages:
2025-05-08 04:10:54 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, n_instances) provided for ['SRAM', 'sram'].__init__. Arguments used: (width, depth, n_rw_ports, technology)
2025-05-08 04:10:54 INFO        | Unused arguments (action_latency_cycles, cycle_seconds, technology, n_instances) provided for ['SRAM', 'sram'].leak. Arguments used: (global_cycle_seconds)
2025-05-08 04:10:54 INFO        | Calling CACTI with cache_size=65536 n_rw_ports=1 block_size=8 tech_node_um=0.045 n_banks=1 tag_size=0 associativity=1
2025-05-08 04:10:54 INFO        | Calling CACTI with input path /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpiij1vgdy
2025-05-08 04:10:54 INFO        | CACTI output will be written to /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpuev0hlsn
2025-05-08 04:10:54 INFO        | CACTI executable not found at /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti/cacti
2025-05-08 04:10:54 INFO        | Calling: cd /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in ; ./cacti -infile /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpiij1vgdy >> /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpuev0hlsn 2>&1
2025-05-08 04:10:54 INFO        | Cache bandwidth: 8.0 bytes/cycle
2025-05-08 04:10:54 INFO        | Cache bandwidth: 38765559223.477394 bits/second
2025-05-08 04:10:54 INFO        | Global cycle time 1e-09 is less than the cache's random cycle time 1.65095e-09
2025-05-08 04:10:54 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for intadder(n_bits=13, precision=13, width=13, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).leak(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        Aladdin_table estimated 0.000934375p with accuracy 70%. Messages:
2025-05-08 04:10:54 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for intadder(technology=45nm, width=0, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).add(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        Aladdin_table estimated 0.0p with accuracy 70%. 
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for intadder(technology=45nm, width=0, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).add(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        Aladdin_table estimated 0.0p with accuracy 70%. 
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for aladdin_register(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).write(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        Library estimated 0.0p with accuracy 90%. Messages:
2025-05-08 04:10:54 INFO        | Found 1 entries for aladdin_register.write.
2025-05-08 04:10:54 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '1', 'dynamic energy(pJ)': '0', 'area(um^2)': '5.98E+00', 'action': 'write', 'name': 'aladdin_register', 'n_instances': 1}
2025-05-08 04:10:54 INFO        | value=0.0, matching_attrs=2, log=['Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_register.global_cycle_seconds from 1e-09 to 1e-09: 1x energy', 'Scaled aladdin_register.technology from 40.0 to 45.0: 1.265241016612673x energy', 'aladdin_register energy has been scaled 1.265241016612673x']
2025-05-08 04:10:54 INFO        | Best-matching entry: {'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '1', 'dynamic energy(pJ)': '0', 'area(um^2)': '5.98E+00', 'action': 'write', 'name': 'aladdin_register', 'n_instances': 1}
2025-05-08 04:10:54 INFO        | Scaling global_cycle_seconds from 1e-9 to 1e-09
2025-05-08 04:10:54 INFO        | Scaling technology from 40nm to 45nm
2025-05-08 04:10:54 INFO        | Scaled aladdin_register.global_cycle_seconds from 1e-09 to 1e-09: 1x energy
2025-05-08 04:10:54 INFO        | Scaled aladdin_register.technology from 40.0 to 45.0: 1.265241016612673x energy
2025-05-08 04:10:54 INFO        | aladdin_register energy has been scaled 1.265241016612673x
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for aladdin_comparator(n_bits=11, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).compare(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        Library estimated 0.037286652759575475p with accuracy 90%. Messages:
2025-05-08 04:10:54 INFO        | Found 1 entries for aladdin_comparator.compare.
2025-05-08 04:10:54 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy(pJ)': '0.02947', 'area(um^2)': '71', 'action': 'compare', 'name': 'aladdin_comparator', 'n_instances': 1}
2025-05-08 04:10:54 INFO        | value=0.02947, matching_attrs=2, log=['Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_comparator.global_cycle_seconds from 1e-09 to 1e-09: 1x energy', 'Scaled aladdin_comparator.technology from 40.0 to 45.0: 1.265241016612673x energy', 'aladdin_comparator energy has been scaled 1.265241016612673x']
2025-05-08 04:10:54 INFO        | Best-matching entry: {'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy(pJ)': '0.02947', 'area(um^2)': '71', 'action': 'compare', 'name': 'aladdin_comparator', 'n_instances': 1}
2025-05-08 04:10:54 INFO        | Scaling global_cycle_seconds from 1e-9 to 1e-09
2025-05-08 04:10:54 INFO        | Scaling technology from 40nm to 45nm
2025-05-08 04:10:54 INFO        | Scaled aladdin_comparator.global_cycle_seconds from 1e-09 to 1e-09: 1x energy
2025-05-08 04:10:54 INFO        | Scaled aladdin_comparator.technology from 40.0 to 45.0: 1.265241016612673x energy
2025-05-08 04:10:54 INFO        | aladdin_comparator energy has been scaled 1.265241016612673x
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for intadder(n_bits=11, precision=11, width=11, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).add(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        Aladdin_table estimated 0.0721875p with accuracy 70%. 
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for aladdin_register(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).read(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        Library estimated 0.011387169149514056p with accuracy 90%. Messages:
2025-05-08 04:10:54 INFO        | Found 1 entries for aladdin_register.read.
2025-05-08 04:10:54 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '1', 'dynamic energy(pJ)': '0.009', 'area(um^2)': '5.98E+00', 'action': 'read', 'name': 'aladdin_register', 'n_instances': 1}
2025-05-08 04:10:54 INFO        | value=0.009, matching_attrs=2, log=['Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_register.global_cycle_seconds from 1e-09 to 1e-09: 1x energy', 'Scaled aladdin_register.technology from 40.0 to 45.0: 1.265241016612673x energy', 'aladdin_register energy has been scaled 1.265241016612673x']
2025-05-08 04:10:54 INFO        | Best-matching entry: {'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '1', 'dynamic energy(pJ)': '0.009', 'area(um^2)': '5.98E+00', 'action': 'read', 'name': 'aladdin_register', 'n_instances': 1}
2025-05-08 04:10:54 INFO        | Scaling global_cycle_seconds from 1e-9 to 1e-09
2025-05-08 04:10:54 INFO        | Scaling technology from 40nm to 45nm
2025-05-08 04:10:54 INFO        | Scaled aladdin_register.global_cycle_seconds from 1e-09 to 1e-09: 1x energy
2025-05-08 04:10:54 INFO        | Scaled aladdin_register.technology from 40.0 to 45.0: 1.265241016612673x energy
2025-05-08 04:10:54 INFO        | aladdin_register energy has been scaled 1.265241016612673x
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for aladdin_comparator(n_bits=11, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).compare(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        Library estimated 0.037286652759575475p with accuracy 90%. Messages:
2025-05-08 04:10:54 INFO        | Found 1 entries for aladdin_comparator.compare.
2025-05-08 04:10:54 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy(pJ)': '0.02947', 'area(um^2)': '71', 'action': 'compare', 'name': 'aladdin_comparator', 'n_instances': 1}
2025-05-08 04:10:54 INFO        | value=0.02947, matching_attrs=2, log=['Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_comparator.global_cycle_seconds from 1e-09 to 1e-09: 1x energy', 'Scaled aladdin_comparator.technology from 40.0 to 45.0: 1.265241016612673x energy', 'aladdin_comparator energy has been scaled 1.265241016612673x']
2025-05-08 04:10:54 INFO        | Best-matching entry: {'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy(pJ)': '0.02947', 'area(um^2)': '71', 'action': 'compare', 'name': 'aladdin_comparator', 'n_instances': 1}
2025-05-08 04:10:54 INFO        | Scaling global_cycle_seconds from 1e-9 to 1e-09
2025-05-08 04:10:54 INFO        | Scaling technology from 40nm to 45nm
2025-05-08 04:10:54 INFO        | Scaled aladdin_comparator.global_cycle_seconds from 1e-09 to 1e-09: 1x energy
2025-05-08 04:10:54 INFO        | Scaled aladdin_comparator.technology from 40.0 to 45.0: 1.265241016612673x energy
2025-05-08 04:10:54 INFO        | aladdin_comparator energy has been scaled 1.265241016612673x
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for intadder(n_bits=11, precision=11, width=11, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).add(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        Aladdin_table estimated 0.0721875p with accuracy 70%. 
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for aladdin_register(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).leak(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        Library estimated 0.0p with accuracy 90%. Messages:
2025-05-08 04:10:54 INFO        | Found 1 entries for aladdin_register.leak.
2025-05-08 04:10:54 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '1', 'dynamic energy(pJ)': '0', 'area(um^2)': '5.98E+00', 'action': 'leak', 'name': 'aladdin_register', 'n_instances': 1}
2025-05-08 04:10:54 INFO        | value=0.0, matching_attrs=2, log=['Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_register.global_cycle_seconds from 1e-09 to 1e-09: 1.0x leak', 'Scaled aladdin_register.technology from 40.0 to 45.0: 1.265241016612673x leak', 'aladdin_register leak has been scaled 1.265241016612673x']
2025-05-08 04:10:54 INFO        | Best-matching entry: {'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '1', 'dynamic energy(pJ)': '0', 'area(um^2)': '5.98E+00', 'action': 'leak', 'name': 'aladdin_register', 'n_instances': 1}
2025-05-08 04:10:54 INFO        | Scaling global_cycle_seconds from 1e-9 to 1e-09
2025-05-08 04:10:54 INFO        | Scaling technology from 40nm to 45nm
2025-05-08 04:10:54 INFO        | Scaled aladdin_register.global_cycle_seconds from 1e-09 to 1e-09: 1.0x leak
2025-05-08 04:10:54 INFO        | Scaled aladdin_register.technology from 40.0 to 45.0: 1.265241016612673x leak
2025-05-08 04:10:54 INFO        | aladdin_register leak has been scaled 1.265241016612673x
2025-05-08 04:10:54 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for aladdin_comparator(n_bits=11, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).leak(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        Library estimated 3.175754951697809e-05p with accuracy 90%. Messages:
2025-05-08 04:10:54 INFO        | Found 1 entries for aladdin_comparator.leak.
2025-05-08 04:10:54 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy(pJ)': '2.51E-05', 'area(um^2)': '71', 'action': 'leak', 'name': 'aladdin_comparator', 'n_instances': 1}
2025-05-08 04:10:54 INFO        | value=2.51e-05, matching_attrs=2, log=['Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_comparator.global_cycle_seconds from 1e-09 to 1e-09: 1.0x leak', 'Scaled aladdin_comparator.technology from 40.0 to 45.0: 1.265241016612673x leak', 'aladdin_comparator leak has been scaled 1.265241016612673x']
2025-05-08 04:10:54 INFO        | Best-matching entry: {'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy(pJ)': '2.51E-05', 'area(um^2)': '71', 'action': 'leak', 'name': 'aladdin_comparator', 'n_instances': 1}
2025-05-08 04:10:54 INFO        | Scaling global_cycle_seconds from 1e-9 to 1e-09
2025-05-08 04:10:54 INFO        | Scaling technology from 40nm to 45nm
2025-05-08 04:10:54 INFO        | Scaled aladdin_comparator.global_cycle_seconds from 1e-09 to 1e-09: 1.0x leak
2025-05-08 04:10:54 INFO        | Scaled aladdin_comparator.technology from 40.0 to 45.0: 1.265241016612673x leak
2025-05-08 04:10:54 INFO        | aladdin_comparator leak has been scaled 1.265241016612673x
2025-05-08 04:10:54 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for intadder(n_bits=11, precision=11, width=11, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).leak(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        Aladdin_table estimated 0.000790625p with accuracy 70%. Messages:
2025-05-08 04:10:54 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for aladdin_register(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).write(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        Library estimated 0.0p with accuracy 90%. Messages:
2025-05-08 04:10:54 INFO        | Found 1 entries for aladdin_register.write.
2025-05-08 04:10:54 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '1', 'dynamic energy(pJ)': '0', 'area(um^2)': '5.98E+00', 'action': 'write', 'name': 'aladdin_register', 'n_instances': 1}
2025-05-08 04:10:54 INFO        | value=0.0, matching_attrs=2, log=['Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_register.global_cycle_seconds from 1e-09 to 1e-09: 1x energy', 'Scaled aladdin_register.technology from 40.0 to 45.0: 1.265241016612673x energy', 'aladdin_register energy has been scaled 1.265241016612673x']
2025-05-08 04:10:54 INFO        | Best-matching entry: {'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '1', 'dynamic energy(pJ)': '0', 'area(um^2)': '5.98E+00', 'action': 'write', 'name': 'aladdin_register', 'n_instances': 1}
2025-05-08 04:10:54 INFO        | Scaling global_cycle_seconds from 1e-9 to 1e-09
2025-05-08 04:10:54 INFO        | Scaling technology from 40nm to 45nm
2025-05-08 04:10:54 INFO        | Scaled aladdin_register.global_cycle_seconds from 1e-09 to 1e-09: 1x energy
2025-05-08 04:10:54 INFO        | Scaled aladdin_register.technology from 40.0 to 45.0: 1.265241016612673x energy
2025-05-08 04:10:54 INFO        | aladdin_register energy has been scaled 1.265241016612673x
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for aladdin_comparator(n_bits=11, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).compare(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        Library estimated 0.037286652759575475p with accuracy 90%. Messages:
2025-05-08 04:10:54 INFO        | Found 1 entries for aladdin_comparator.compare.
2025-05-08 04:10:54 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy(pJ)': '0.02947', 'area(um^2)': '71', 'action': 'compare', 'name': 'aladdin_comparator', 'n_instances': 1}
2025-05-08 04:10:54 INFO        | value=0.02947, matching_attrs=2, log=['Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_comparator.global_cycle_seconds from 1e-09 to 1e-09: 1x energy', 'Scaled aladdin_comparator.technology from 40.0 to 45.0: 1.265241016612673x energy', 'aladdin_comparator energy has been scaled 1.265241016612673x']
2025-05-08 04:10:54 INFO        | Best-matching entry: {'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy(pJ)': '0.02947', 'area(um^2)': '71', 'action': 'compare', 'name': 'aladdin_comparator', 'n_instances': 1}
2025-05-08 04:10:54 INFO        | Scaling global_cycle_seconds from 1e-9 to 1e-09
2025-05-08 04:10:54 INFO        | Scaling technology from 40nm to 45nm
2025-05-08 04:10:54 INFO        | Scaled aladdin_comparator.global_cycle_seconds from 1e-09 to 1e-09: 1x energy
2025-05-08 04:10:54 INFO        | Scaled aladdin_comparator.technology from 40.0 to 45.0: 1.265241016612673x energy
2025-05-08 04:10:54 INFO        | aladdin_comparator energy has been scaled 1.265241016612673x
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for intadder(n_bits=11, precision=11, width=11, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).add(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        Aladdin_table estimated 0.0721875p with accuracy 70%. 
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for SRAM(width=8, depth=1, n_rw_ports=1, technology=45nm, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).read(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        CactiSRAM estimated 1.2444036715928991e-14 with accuracy 80%. Messages:
2025-05-08 04:10:54 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, n_instances) provided for ['SRAM', 'sram'].__init__. Arguments used: (width, depth, n_rw_ports, technology)
2025-05-08 04:10:54 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, technology, n_instances) provided for ['SRAM', 'sram'].read. Arguments used: ()
2025-05-08 04:10:54 INFO        | Calling CACTI with cache_size=256 n_rw_ports=1 block_size=4 tech_node_um=0.045 n_banks=1 tag_size=0 associativity=1
2025-05-08 04:10:54 INFO        | Calling CACTI with input path /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpi3vc6rza
2025-05-08 04:10:54 INFO        | CACTI output will be written to /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpoqknfod6
2025-05-08 04:10:54 INFO        | CACTI executable not found at /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti/cacti
2025-05-08 04:10:54 INFO        | Calling: cd /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in ; ./cacti -infile /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpi3vc6rza >> /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpoqknfod6 2>&1
2025-05-08 04:10:54 INFO        | Cache bandwidth: 1.0 bytes/cycle
2025-05-08 04:10:54 INFO        | Cache bandwidth: 16355302593.542109 bits/second
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for intadder(n_bits=1, precision=1, width=1, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).add(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        Aladdin_table estimated 0.0065625p with accuracy 70%. 
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for SRAM(width=8, depth=1, n_rw_ports=1, technology=45nm, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).write(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        CactiSRAM estimated 2.0478140963632353e-14 with accuracy 80%. Messages:
2025-05-08 04:10:54 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, n_instances) provided for ['SRAM', 'sram'].__init__. Arguments used: (width, depth, n_rw_ports, technology)
2025-05-08 04:10:54 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, technology, n_instances) provided for ['SRAM', 'sram'].write. Arguments used: ()
2025-05-08 04:10:54 INFO        | Calling CACTI with cache_size=256 n_rw_ports=1 block_size=4 tech_node_um=0.045 n_banks=1 tag_size=0 associativity=1
2025-05-08 04:10:54 INFO        | Calling CACTI with input path /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpl8ml2_w7
2025-05-08 04:10:54 INFO        | CACTI output will be written to /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpdpw_2rii
2025-05-08 04:10:54 INFO        | CACTI executable not found at /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti/cacti
2025-05-08 04:10:54 INFO        | Calling: cd /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in ; ./cacti -infile /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpl8ml2_w7 >> /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpdpw_2rii 2>&1
2025-05-08 04:10:54 INFO        | Cache bandwidth: 1.0 bytes/cycle
2025-05-08 04:10:54 INFO        | Cache bandwidth: 16355302593.542109 bits/second
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for intadder(n_bits=1, precision=1, width=1, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).add(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        Aladdin_table estimated 0.0065625p with accuracy 70%. 
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for SRAM(width=8, depth=1, n_rw_ports=1, technology=45nm, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).write(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        CactiSRAM estimated 2.0478140963632353e-14 with accuracy 80%. Messages:
2025-05-08 04:10:54 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, n_instances) provided for ['SRAM', 'sram'].__init__. Arguments used: (width, depth, n_rw_ports, technology)
2025-05-08 04:10:54 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, technology, n_instances) provided for ['SRAM', 'sram'].write. Arguments used: ()
2025-05-08 04:10:54 INFO        | Calling CACTI with cache_size=256 n_rw_ports=1 block_size=4 tech_node_um=0.045 n_banks=1 tag_size=0 associativity=1
2025-05-08 04:10:54 INFO        | Calling CACTI with input path /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpvg1l3hi1
2025-05-08 04:10:54 INFO        | CACTI output will be written to /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp821mowex
2025-05-08 04:10:54 INFO        | CACTI executable not found at /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti/cacti
2025-05-08 04:10:54 INFO        | Calling: cd /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in ; ./cacti -infile /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpvg1l3hi1 >> /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp821mowex 2>&1
2025-05-08 04:10:54 INFO        | Cache bandwidth: 1.0 bytes/cycle
2025-05-08 04:10:54 INFO        | Cache bandwidth: 16355302593.542109 bits/second
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for intadder(n_bits=1, precision=1, width=1, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).add(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        Aladdin_table estimated 0.0065625p with accuracy 70%. 
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for SRAM(width=8, depth=1, n_rw_ports=1, technology=45nm, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).read(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        CactiSRAM estimated 1.2444036715928991e-14 with accuracy 80%. Messages:
2025-05-08 04:10:54 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, n_instances) provided for ['SRAM', 'sram'].__init__. Arguments used: (width, depth, n_rw_ports, technology)
2025-05-08 04:10:54 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, technology, n_instances) provided for ['SRAM', 'sram'].read. Arguments used: ()
2025-05-08 04:10:54 INFO        | Calling CACTI with cache_size=256 n_rw_ports=1 block_size=4 tech_node_um=0.045 n_banks=1 tag_size=0 associativity=1
2025-05-08 04:10:54 INFO        | Calling CACTI with input path /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpzlw47o7h
2025-05-08 04:10:54 INFO        | CACTI output will be written to /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpxgf49116
2025-05-08 04:10:54 INFO        | CACTI executable not found at /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti/cacti
2025-05-08 04:10:54 INFO        | Calling: cd /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in ; ./cacti -infile /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpzlw47o7h >> /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpxgf49116 2>&1
2025-05-08 04:10:54 INFO        | Cache bandwidth: 1.0 bytes/cycle
2025-05-08 04:10:54 INFO        | Cache bandwidth: 16355302593.542109 bits/second
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for intadder(n_bits=1, precision=1, width=1, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).add(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        Aladdin_table estimated 0.0065625p with accuracy 70%. 
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for SRAM(width=8, depth=1, n_rw_ports=1, technology=45nm, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).write(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        CactiSRAM estimated 2.0478140963632353e-14 with accuracy 80%. Messages:
2025-05-08 04:10:54 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, n_instances) provided for ['SRAM', 'sram'].__init__. Arguments used: (width, depth, n_rw_ports, technology)
2025-05-08 04:10:54 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, technology, n_instances) provided for ['SRAM', 'sram'].write. Arguments used: ()
2025-05-08 04:10:54 INFO        | Calling CACTI with cache_size=256 n_rw_ports=1 block_size=4 tech_node_um=0.045 n_banks=1 tag_size=0 associativity=1
2025-05-08 04:10:54 INFO        | Calling CACTI with input path /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpvzuhv63q
2025-05-08 04:10:54 INFO        | CACTI output will be written to /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmphl8hrg9m
2025-05-08 04:10:54 INFO        | CACTI executable not found at /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti/cacti
2025-05-08 04:10:54 INFO        | Calling: cd /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in ; ./cacti -infile /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpvzuhv63q >> /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmphl8hrg9m 2>&1
2025-05-08 04:10:54 INFO        | Cache bandwidth: 1.0 bytes/cycle
2025-05-08 04:10:54 INFO        | Cache bandwidth: 16355302593.542109 bits/second
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for intadder(n_bits=1, precision=1, width=1, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).add(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        Aladdin_table estimated 0.0065625p with accuracy 70%. 
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for SRAM(width=8, depth=1, n_rw_ports=1, technology=45nm, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).write(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        CactiSRAM estimated 2.0478140963632353e-14 with accuracy 80%. Messages:
2025-05-08 04:10:54 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, n_instances) provided for ['SRAM', 'sram'].__init__. Arguments used: (width, depth, n_rw_ports, technology)
2025-05-08 04:10:54 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, technology, n_instances) provided for ['SRAM', 'sram'].write. Arguments used: ()
2025-05-08 04:10:54 INFO        | Calling CACTI with cache_size=256 n_rw_ports=1 block_size=4 tech_node_um=0.045 n_banks=1 tag_size=0 associativity=1
2025-05-08 04:10:54 INFO        | Calling CACTI with input path /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpmqmaqxwm
2025-05-08 04:10:54 INFO        | CACTI output will be written to /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpbuei1avr
2025-05-08 04:10:54 INFO        | CACTI executable not found at /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti/cacti
2025-05-08 04:10:54 INFO        | Calling: cd /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in ; ./cacti -infile /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpmqmaqxwm >> /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpbuei1avr 2>&1
2025-05-08 04:10:54 INFO        | Cache bandwidth: 1.0 bytes/cycle
2025-05-08 04:10:54 INFO        | Cache bandwidth: 16355302593.542109 bits/second
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for intadder(n_bits=1, precision=1, width=1, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).add(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        Aladdin_table estimated 0.0065625p with accuracy 70%. 
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for SRAM(width=8, depth=1, n_rw_ports=1, technology=45nm, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).leak(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        CactiSRAM estimated 4.5543359375000005e-20 with accuracy 80%. Messages:
2025-05-08 04:10:54 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, n_instances) provided for ['SRAM', 'sram'].__init__. Arguments used: (width, depth, n_rw_ports, technology)
2025-05-08 04:10:54 INFO        | Unused arguments (action_latency_cycles, cycle_seconds, technology, n_instances) provided for ['SRAM', 'sram'].leak. Arguments used: (global_cycle_seconds)
2025-05-08 04:10:54 INFO        | Calling CACTI with cache_size=256 n_rw_ports=1 block_size=4 tech_node_um=0.045 n_banks=1 tag_size=0 associativity=1
2025-05-08 04:10:54 INFO        | Calling CACTI with input path /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp8suy7yx6
2025-05-08 04:10:54 INFO        | CACTI output will be written to /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpvmv49imu
2025-05-08 04:10:54 INFO        | CACTI executable not found at /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti/cacti
2025-05-08 04:10:54 INFO        | Calling: cd /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in ; ./cacti -infile /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp8suy7yx6 >> /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpvmv49imu 2>&1
2025-05-08 04:10:54 INFO        | Cache bandwidth: 1.0 bytes/cycle
2025-05-08 04:10:54 INFO        | Cache bandwidth: 16355302593.542109 bits/second
2025-05-08 04:10:54 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for intadder(n_bits=1, precision=1, width=1, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).leak(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        Aladdin_table estimated 7.1875e-05p with accuracy 70%. Messages:
2025-05-08 04:10:54 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for SRAM(width=8, depth=1, n_rw_ports=1, technology=45nm, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).leak(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        CactiSRAM estimated 4.5543359375000005e-20 with accuracy 80%. Messages:
2025-05-08 04:10:54 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, n_instances) provided for ['SRAM', 'sram'].__init__. Arguments used: (width, depth, n_rw_ports, technology)
2025-05-08 04:10:54 INFO        | Unused arguments (action_latency_cycles, cycle_seconds, technology, n_instances) provided for ['SRAM', 'sram'].leak. Arguments used: (global_cycle_seconds)
2025-05-08 04:10:54 INFO        | Calling CACTI with cache_size=256 n_rw_ports=1 block_size=4 tech_node_um=0.045 n_banks=1 tag_size=0 associativity=1
2025-05-08 04:10:54 INFO        | Calling CACTI with input path /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpcsnc58at
2025-05-08 04:10:54 INFO        | CACTI output will be written to /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpmrmct_ct
2025-05-08 04:10:54 INFO        | CACTI executable not found at /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti/cacti
2025-05-08 04:10:54 INFO        | Calling: cd /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in ; ./cacti -infile /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpcsnc58at >> /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpmrmct_ct 2>&1
2025-05-08 04:10:54 INFO        | Cache bandwidth: 1.0 bytes/cycle
2025-05-08 04:10:54 INFO        | Cache bandwidth: 16355302593.542109 bits/second
2025-05-08 04:10:54 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for intadder(n_bits=1, precision=1, width=1, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).leak(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        Aladdin_table estimated 7.1875e-05p with accuracy 70%. Messages:
2025-05-08 04:10:54 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for intadder(technology=45nm, width=0, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).add(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        Aladdin_table estimated 0.0p with accuracy 70%. 
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for intadder(technology=45nm, width=0, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).add(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        Aladdin_table estimated 0.0p with accuracy 70%. 
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for aladdin_adder(width=16, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).read(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        Library estimated 0.13285030674433068p with accuracy 90%. Messages:
2025-05-08 04:10:54 INFO        | Found 1 entries for aladdin_adder.read.
2025-05-08 04:10:54 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0.21', 'area': '2.78E+02', 'action': 'read', 'name': 'aladdin_adder', 'n_instances': 1}
2025-05-08 04:10:54 INFO        | value=0.21, matching_attrs=2, log=['Scaling width from 32 to 16', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_adder.width from 32.0 to 16.0: 0.5x energy', 'Scaled aladdin_adder.global_cycle_seconds from 1e-09 to 1e-09: 1x energy', 'Scaled aladdin_adder.technology from 40.0 to 45.0: 1.265241016612673x energy', 'aladdin_adder energy has been scaled 0.6326205083063365x']
2025-05-08 04:10:54 INFO        | Best-matching entry: {'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0.21', 'area': '2.78E+02', 'action': 'read', 'name': 'aladdin_adder', 'n_instances': 1}
2025-05-08 04:10:54 INFO        | Scaling width from 32 to 16
2025-05-08 04:10:54 INFO        | Scaling global_cycle_seconds from 1e-9 to 1e-09
2025-05-08 04:10:54 INFO        | Scaling technology from 40nm to 45nm
2025-05-08 04:10:54 INFO        | Scaled aladdin_adder.width from 32.0 to 16.0: 0.5x energy
2025-05-08 04:10:54 INFO        | Scaled aladdin_adder.global_cycle_seconds from 1e-09 to 1e-09: 1x energy
2025-05-08 04:10:54 INFO        | Scaled aladdin_adder.technology from 40.0 to 45.0: 1.265241016612673x energy
2025-05-08 04:10:54 INFO        | aladdin_adder energy has been scaled 0.6326205083063365x
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for aladdin_multiplier(width_a=8, width_b=8, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).read(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        Library estimated 1.0027035056655433p with accuracy 90%. Messages:
2025-05-08 04:10:54 INFO        | Found 1 entries for aladdin_multiplier.read.
2025-05-08 04:10:54 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '12.68', 'area(um^2)': '6350', 'action': 'read', 'name': 'aladdin_multiplier', 'n_instances': 1}
2025-05-08 04:10:54 INFO        | value=12.68, matching_attrs=2, log=['Scaling width_a from 32 to 8', 'Scaling width_b from 32 to 8', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_multiplier.width_a from 32.0 to 8.0: 0.25x energy', 'Scaled aladdin_multiplier.width_b from 32.0 to 8.0: 0.25x energy', 'Scaled aladdin_multiplier.global_cycle_seconds from 1e-09 to 1e-09: 1x energy', 'Scaled aladdin_multiplier.technology from 40.0 to 45.0: 1.265241016612673x energy', 'aladdin_multiplier energy has been scaled 0.07907756353829207x']
2025-05-08 04:10:54 INFO        | Best-matching entry: {'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '12.68', 'area(um^2)': '6350', 'action': 'read', 'name': 'aladdin_multiplier', 'n_instances': 1}
2025-05-08 04:10:54 INFO        | Scaling width_a from 32 to 8
2025-05-08 04:10:54 INFO        | Scaling width_b from 32 to 8
2025-05-08 04:10:54 INFO        | Scaling global_cycle_seconds from 1e-9 to 1e-09
2025-05-08 04:10:54 INFO        | Scaling technology from 40nm to 45nm
2025-05-08 04:10:54 INFO        | Scaled aladdin_multiplier.width_a from 32.0 to 8.0: 0.25x energy
2025-05-08 04:10:54 INFO        | Scaled aladdin_multiplier.width_b from 32.0 to 8.0: 0.25x energy
2025-05-08 04:10:54 INFO        | Scaled aladdin_multiplier.global_cycle_seconds from 1e-09 to 1e-09: 1x energy
2025-05-08 04:10:54 INFO        | Scaled aladdin_multiplier.technology from 40.0 to 45.0: 1.265241016612673x energy
2025-05-08 04:10:54 INFO        | aladdin_multiplier energy has been scaled 0.07907756353829207x
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for aladdin_adder(width=16, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).leak(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        Library estimated 0.0015182892199352076p with accuracy 90%. Messages:
2025-05-08 04:10:54 INFO        | Found 1 entries for aladdin_adder.leak.
2025-05-08 04:10:54 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0.0024', 'area': '2.78E+02', 'action': 'leak', 'name': 'aladdin_adder', 'n_instances': 1}
2025-05-08 04:10:54 INFO        | value=0.0024, matching_attrs=2, log=['Scaling width from 32 to 16', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_adder.width from 32.0 to 16.0: 0.5x leak', 'Scaled aladdin_adder.global_cycle_seconds from 1e-09 to 1e-09: 1.0x leak', 'Scaled aladdin_adder.technology from 40.0 to 45.0: 1.265241016612673x leak', 'aladdin_adder leak has been scaled 0.6326205083063365x']
2025-05-08 04:10:54 INFO        | Best-matching entry: {'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0.0024', 'area': '2.78E+02', 'action': 'leak', 'name': 'aladdin_adder', 'n_instances': 1}
2025-05-08 04:10:54 INFO        | Scaling width from 32 to 16
2025-05-08 04:10:54 INFO        | Scaling global_cycle_seconds from 1e-9 to 1e-09
2025-05-08 04:10:54 INFO        | Scaling technology from 40nm to 45nm
2025-05-08 04:10:54 INFO        | Scaled aladdin_adder.width from 32.0 to 16.0: 0.5x leak
2025-05-08 04:10:54 INFO        | Scaled aladdin_adder.global_cycle_seconds from 1e-09 to 1e-09: 1.0x leak
2025-05-08 04:10:54 INFO        | Scaled aladdin_adder.technology from 40.0 to 45.0: 1.265241016612673x leak
2025-05-08 04:10:54 INFO        | aladdin_adder leak has been scaled 0.6326205083063365x
2025-05-08 04:10:54 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        ENERGY ESTIMATION for aladdin_multiplier(width_a=8, width_b=8, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).leak(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:54 INFO        Library estimated 0.006326205083063366p with accuracy 90%. Messages:
2025-05-08 04:10:54 INFO        | Found 1 entries for aladdin_multiplier.leak.
2025-05-08 04:10:54 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '0.08', 'area(um^2)': '6350', 'action': 'leak', 'name': 'aladdin_multiplier', 'n_instances': 1}
2025-05-08 04:10:54 INFO        | value=0.08, matching_attrs=2, log=['Scaling width_a from 32 to 8', 'Scaling width_b from 32 to 8', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_multiplier.width_a from 32.0 to 8.0: 0.25x leak', 'Scaled aladdin_multiplier.width_b from 32.0 to 8.0: 0.25x leak', 'Scaled aladdin_multiplier.global_cycle_seconds from 1e-09 to 1e-09: 1.0x leak', 'Scaled aladdin_multiplier.technology from 40.0 to 45.0: 1.265241016612673x leak', 'aladdin_multiplier leak has been scaled 0.07907756353829207x']
2025-05-08 04:10:54 INFO        | Best-matching entry: {'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '0.08', 'area(um^2)': '6350', 'action': 'leak', 'name': 'aladdin_multiplier', 'n_instances': 1}
2025-05-08 04:10:54 INFO        | Scaling width_a from 32 to 8
2025-05-08 04:10:54 INFO        | Scaling width_b from 32 to 8
2025-05-08 04:10:54 INFO        | Scaling global_cycle_seconds from 1e-9 to 1e-09
2025-05-08 04:10:54 INFO        | Scaling technology from 40nm to 45nm
2025-05-08 04:10:54 INFO        | Scaled aladdin_multiplier.width_a from 32.0 to 8.0: 0.25x leak
2025-05-08 04:10:54 INFO        | Scaled aladdin_multiplier.width_b from 32.0 to 8.0: 0.25x leak
2025-05-08 04:10:54 INFO        | Scaled aladdin_multiplier.global_cycle_seconds from 1e-09 to 1e-09: 1.0x leak
2025-05-08 04:10:54 INFO        | Scaled aladdin_multiplier.technology from 40.0 to 45.0: 1.265241016612673x leak
2025-05-08 04:10:54 INFO        | aladdin_multiplier leak has been scaled 0.07907756353829207x
2025-05-08 04:10:54 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:54 WARNING     No action counts are specified as yaml input
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        AREA ESTIMATION for DRAM(type=LPDDR4, width=64, metadata_storage_width=64, datawidth=8, cluster_size=1, read_bandwidth=32, write_bandwidth=32, has_power_gating=False, n_banks=2, reduction_supported=True, multiple_buffering=1, min_utilization=0, allow_overbooking=False, meshX=1, meshY=1, technology=45nm, version=0.4, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1)
2025-05-08 04:10:54 INFO        CactiDRAM estimated 0 with accuracy 80%. Messages:
2025-05-08 04:10:54 INFO        | Unused arguments (metadata_storage_width, datawidth, cluster_size, read_bandwidth, write_bandwidth, has_power_gating, n_banks, reduction_supported, multiple_buffering, min_utilization, allow_overbooking, meshX, meshY, technology, version, global_cycle_seconds, action_latency_cycles, cycle_seconds, n_instances) provided for ['DRAM', 'dram'].__init__. Arguments used: (type, width)
2025-05-08 04:10:54 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        AREA ESTIMATION for dummy_storage(width=1, depth=1, datawidth=1, technology=-1, has_power_gating=False, n_banks=2, cluster_size=1, reduction_supported=True, multiple_buffering=1, min_utilization=0, allow_overbooking=False, meshX=1, meshY=1, version=0.4, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1)
2025-05-08 04:10:54 INFO        dummy estimated 1u^2 with accuracy 100%. Messages:
2025-05-08 04:10:54 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        AREA ESTIMATION for dummy_storage(width=1, depth=1, datawidth=1, technology=-1, has_power_gating=False, n_banks=2, cluster_size=1, reduction_supported=True, multiple_buffering=1, min_utilization=0, allow_overbooking=False, meshX=1, meshY=4, version=0.4, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1)
2025-05-08 04:10:54 INFO        dummy estimated 1u^2 with accuracy 100%. Messages:
2025-05-08 04:10:54 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:54 INFO        
2025-05-08 04:10:54 INFO        AREA ESTIMATION for SRAM(width=256, depth=8192, n_rw_ports=1, technology=45nm, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1)
2025-05-08 04:10:56 INFO        CactiSRAM estimated 8.59765e-07 with accuracy 80%. Messages:
2025-05-08 04:10:56 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, n_instances) provided for ['SRAM', 'sram'].__init__. Arguments used: (width, depth, n_rw_ports, technology)
2025-05-08 04:10:56 INFO        | Calling CACTI with cache_size=262144 n_rw_ports=1 block_size=32 tech_node_um=0.045 n_banks=1 tag_size=0 associativity=1
2025-05-08 04:10:56 INFO        | Calling CACTI with input path /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp8dv7m3n8
2025-05-08 04:10:56 INFO        | CACTI output will be written to /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpr1kxn74f
2025-05-08 04:10:56 INFO        | CACTI executable not found at /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti/cacti
2025-05-08 04:10:56 INFO        | Calling: cd /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in ; ./cacti -infile /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp8dv7m3n8 >> /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpr1kxn74f 2>&1
2025-05-08 04:10:56 INFO        | Cache bandwidth: 32.0 bytes/cycle
2025-05-08 04:10:56 INFO        | Cache bandwidth: 74205909805.03555 bits/second
2025-05-08 04:10:56 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:56 INFO        
2025-05-08 04:10:56 INFO        AREA ESTIMATION for intadder(n_bits=13, precision=13, width=13, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:56 INFO        Aladdin_table estimated 112.9375u^2 with accuracy 70%. Messages:
2025-05-08 04:10:56 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:56 INFO        
2025-05-08 04:10:56 INFO        AREA ESTIMATION for SRAM(width=64, depth=8192, n_rw_ports=1, technology=45nm, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1)
2025-05-08 04:10:57 INFO        CactiSRAM estimated 2.09046e-07 with accuracy 80%. Messages:
2025-05-08 04:10:57 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, n_instances) provided for ['SRAM', 'sram'].__init__. Arguments used: (width, depth, n_rw_ports, technology)
2025-05-08 04:10:57 INFO        | Calling CACTI with cache_size=65536 n_rw_ports=1 block_size=8 tech_node_um=0.045 n_banks=1 tag_size=0 associativity=1
2025-05-08 04:10:57 INFO        | Calling CACTI with input path /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpotntl81f
2025-05-08 04:10:57 INFO        | CACTI output will be written to /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp4wrb_fcn
2025-05-08 04:10:57 INFO        | CACTI executable not found at /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti/cacti
2025-05-08 04:10:57 INFO        | Calling: cd /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in ; ./cacti -infile /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpotntl81f >> /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp4wrb_fcn 2>&1
2025-05-08 04:10:57 INFO        | Cache bandwidth: 8.0 bytes/cycle
2025-05-08 04:10:57 INFO        | Cache bandwidth: 38765559223.477394 bits/second
2025-05-08 04:10:57 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:57 INFO        
2025-05-08 04:10:57 INFO        AREA ESTIMATION for intadder(n_bits=13, precision=13, width=13, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:57 INFO        Aladdin_table estimated 112.9375u^2 with accuracy 70%. Messages:
2025-05-08 04:10:57 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:57 INFO        
2025-05-08 04:10:57 INFO        AREA ESTIMATION for intadder(technology=45nm, width=0, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1)
2025-05-08 04:10:57 INFO        Aladdin_table estimated 0.0u^2 with accuracy 70%. Messages:
2025-05-08 04:10:57 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:57 INFO        
2025-05-08 04:10:57 INFO        AREA ESTIMATION for aladdin_register(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:57 INFO        Library estimated 10.396u^2 with accuracy 90%. Messages:
2025-05-08 04:10:57 INFO        | Found 4 entries for aladdin_register.
2025-05-08 04:10:57 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '1', 'dynamic energy(pJ)': '0.009', 'area(um^2)': '5.98E+00', 'action': 'read', 'name': 'aladdin_register', 'n_instances': 1}
2025-05-08 04:10:57 INFO        | value=5.98, matching_attrs=2, log=['Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_register.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'Scaled aladdin_register.technology from 40.0 to 45.0: 1.7384615384615385x area', 'aladdin_register area has been scaled 1.7384615384615385x']
2025-05-08 04:10:57 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '1', 'dynamic energy(pJ)': '0', 'area(um^2)': '5.98E+00', 'action': 'write', 'name': 'aladdin_register', 'n_instances': 1}
2025-05-08 04:10:57 INFO        | value=5.98, matching_attrs=2, log=['Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_register.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'Scaled aladdin_register.technology from 40.0 to 45.0: 1.7384615384615385x area', 'aladdin_register area has been scaled 1.7384615384615385x']
2025-05-08 04:10:57 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '1', 'dynamic energy(pJ)': '0', 'area(um^2)': '5.98E+00', 'action': 'leak', 'name': 'aladdin_register', 'n_instances': 1}
2025-05-08 04:10:57 INFO        | value=5.98, matching_attrs=2, log=['Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_register.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'Scaled aladdin_register.technology from 40.0 to 45.0: 1.7384615384615385x area', 'aladdin_register area has been scaled 1.7384615384615385x']
2025-05-08 04:10:57 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '1', 'dynamic energy(pJ)': '0', 'area(um^2)': '5.98E+00', 'action': 'update', 'name': 'aladdin_register', 'n_instances': 1}
2025-05-08 04:10:57 INFO        | value=5.98, matching_attrs=2, log=['Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_register.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'Scaled aladdin_register.technology from 40.0 to 45.0: 1.7384615384615385x area', 'aladdin_register area has been scaled 1.7384615384615385x']
2025-05-08 04:10:57 INFO        | Best-matching entry: {'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '1', 'dynamic energy(pJ)': '0.009', 'area(um^2)': '5.98E+00', 'action': 'read', 'name': 'aladdin_register', 'n_instances': 1}
2025-05-08 04:10:57 INFO        | Scaling global_cycle_seconds from 1e-9 to 1e-09
2025-05-08 04:10:57 INFO        | Scaling technology from 40nm to 45nm
2025-05-08 04:10:57 INFO        | Scaled aladdin_register.global_cycle_seconds from 1e-09 to 1e-09: 1x area
2025-05-08 04:10:57 INFO        | Scaled aladdin_register.technology from 40.0 to 45.0: 1.7384615384615385x area
2025-05-08 04:10:57 INFO        | aladdin_register area has been scaled 1.7384615384615385x
2025-05-08 04:10:57 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:57 INFO        
2025-05-08 04:10:57 INFO        AREA ESTIMATION for aladdin_comparator(n_bits=11, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:57 INFO        Library estimated 123.43076923076923u^2 with accuracy 90%. Messages:
2025-05-08 04:10:57 INFO        | Found 5 entries for aladdin_comparator.
2025-05-08 04:10:57 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy(pJ)': '0.02947', 'area(um^2)': '71', 'action': 'compare', 'name': 'aladdin_comparator', 'n_instances': 1}
2025-05-08 04:10:57 INFO        | value=71.0, matching_attrs=2, log=['Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_comparator.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'Scaled aladdin_comparator.technology from 40.0 to 45.0: 1.7384615384615385x area', 'aladdin_comparator area has been scaled 1.7384615384615385x']
2025-05-08 04:10:57 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy(pJ)': '0.02947', 'area(um^2)': '71', 'action': 'read', 'name': 'aladdin_comparator', 'n_instances': 1}
2025-05-08 04:10:57 INFO        | value=71.0, matching_attrs=2, log=['Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_comparator.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'Scaled aladdin_comparator.technology from 40.0 to 45.0: 1.7384615384615385x area', 'aladdin_comparator area has been scaled 1.7384615384615385x']
2025-05-08 04:10:57 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy(pJ)': '2.51E-05', 'area(um^2)': '71', 'action': 'leak', 'name': 'aladdin_comparator', 'n_instances': 1}
2025-05-08 04:10:57 INFO        | value=71.0, matching_attrs=2, log=['Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_comparator.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'Scaled aladdin_comparator.technology from 40.0 to 45.0: 1.7384615384615385x area', 'aladdin_comparator area has been scaled 1.7384615384615385x']
2025-05-08 04:10:57 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy(pJ)': '0', 'area(um^2)': '71', 'action': 'update', 'name': 'aladdin_comparator', 'n_instances': 1}
2025-05-08 04:10:57 INFO        | value=71.0, matching_attrs=2, log=['Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_comparator.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'Scaled aladdin_comparator.technology from 40.0 to 45.0: 1.7384615384615385x area', 'aladdin_comparator area has been scaled 1.7384615384615385x']
2025-05-08 04:10:57 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy(pJ)': '0', 'area(um^2)': '71', 'action': 'write', 'name': 'aladdin_comparator', 'n_instances': 1}
2025-05-08 04:10:57 INFO        | value=71.0, matching_attrs=2, log=['Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_comparator.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'Scaled aladdin_comparator.technology from 40.0 to 45.0: 1.7384615384615385x area', 'aladdin_comparator area has been scaled 1.7384615384615385x']
2025-05-08 04:10:57 INFO        | Best-matching entry: {'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy(pJ)': '0.02947', 'area(um^2)': '71', 'action': 'compare', 'name': 'aladdin_comparator', 'n_instances': 1}
2025-05-08 04:10:57 INFO        | Scaling global_cycle_seconds from 1e-9 to 1e-09
2025-05-08 04:10:57 INFO        | Scaling technology from 40nm to 45nm
2025-05-08 04:10:57 INFO        | Scaled aladdin_comparator.global_cycle_seconds from 1e-09 to 1e-09: 1x area
2025-05-08 04:10:57 INFO        | Scaled aladdin_comparator.technology from 40.0 to 45.0: 1.7384615384615385x area
2025-05-08 04:10:57 INFO        | aladdin_comparator area has been scaled 1.7384615384615385x
2025-05-08 04:10:57 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:57 INFO        
2025-05-08 04:10:57 INFO        AREA ESTIMATION for intadder(n_bits=11, precision=11, width=11, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:57 INFO        Aladdin_table estimated 95.5625u^2 with accuracy 70%. Messages:
2025-05-08 04:10:57 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:57 INFO        
2025-05-08 04:10:57 INFO        AREA ESTIMATION for SRAM(width=8, depth=1, n_rw_ports=1, technology=45nm, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1)
2025-05-08 04:10:57 INFO        CactiSRAM estimated 4.1225e-12 with accuracy 80%. Messages:
2025-05-08 04:10:57 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, n_instances) provided for ['SRAM', 'sram'].__init__. Arguments used: (width, depth, n_rw_ports, technology)
2025-05-08 04:10:57 INFO        | Calling CACTI with cache_size=256 n_rw_ports=1 block_size=4 tech_node_um=0.045 n_banks=1 tag_size=0 associativity=1
2025-05-08 04:10:57 INFO        | Calling CACTI with input path /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpyl3ymnq7
2025-05-08 04:10:57 INFO        | CACTI output will be written to /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpcy9mlarj
2025-05-08 04:10:57 INFO        | CACTI executable not found at /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti/cacti
2025-05-08 04:10:57 INFO        | Calling: cd /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in ; ./cacti -infile /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpyl3ymnq7 >> /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpcy9mlarj 2>&1
2025-05-08 04:10:57 INFO        | Cache bandwidth: 1.0 bytes/cycle
2025-05-08 04:10:57 INFO        | Cache bandwidth: 16355302593.542109 bits/second
2025-05-08 04:10:57 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:57 INFO        
2025-05-08 04:10:57 INFO        AREA ESTIMATION for intadder(n_bits=1, precision=1, width=1, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:57 INFO        Aladdin_table estimated 8.6875u^2 with accuracy 70%. Messages:
2025-05-08 04:10:57 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:57 INFO        
2025-05-08 04:10:57 INFO        AREA ESTIMATION for SRAM(width=8, depth=1, n_rw_ports=1, technology=45nm, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1)
2025-05-08 04:10:57 INFO        CactiSRAM estimated 4.1225e-12 with accuracy 80%. Messages:
2025-05-08 04:10:57 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles, cycle_seconds, n_instances) provided for ['SRAM', 'sram'].__init__. Arguments used: (width, depth, n_rw_ports, technology)
2025-05-08 04:10:57 INFO        | Calling CACTI with cache_size=256 n_rw_ports=1 block_size=4 tech_node_um=0.045 n_banks=1 tag_size=0 associativity=1
2025-05-08 04:10:57 INFO        | Calling CACTI with input path /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpqxzvl5rl
2025-05-08 04:10:57 INFO        | CACTI output will be written to /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpoknl7165
2025-05-08 04:10:57 INFO        | CACTI executable not found at /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti/cacti
2025-05-08 04:10:57 INFO        | Calling: cd /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in ; ./cacti -infile /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpqxzvl5rl >> /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpoknl7165 2>&1
2025-05-08 04:10:57 INFO        | Cache bandwidth: 1.0 bytes/cycle
2025-05-08 04:10:57 INFO        | Cache bandwidth: 16355302593.542109 bits/second
2025-05-08 04:10:57 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:57 INFO        
2025-05-08 04:10:57 INFO        AREA ESTIMATION for intadder(n_bits=1, precision=1, width=1, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:57 INFO        Aladdin_table estimated 8.6875u^2 with accuracy 70%. Messages:
2025-05-08 04:10:57 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:57 INFO        
2025-05-08 04:10:57 INFO        AREA ESTIMATION for intadder(technology=45nm, width=0, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1)
2025-05-08 04:10:57 INFO        Aladdin_table estimated 0.0u^2 with accuracy 70%. Messages:
2025-05-08 04:10:57 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:57 INFO        
2025-05-08 04:10:57 INFO        AREA ESTIMATION for aladdin_adder(width=16, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:57 INFO        Library estimated 241.64615384615385u^2 with accuracy 90%. Messages:
2025-05-08 04:10:57 INFO        | Found 5 entries for aladdin_adder.
2025-05-08 04:10:57 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0.21', 'area': '2.78E+02', 'action': 'add', 'name': 'aladdin_adder', 'n_instances': 1}
2025-05-08 04:10:57 INFO        | value=278.0, matching_attrs=2, log=['Scaling width from 32 to 16', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_adder.width from 32.0 to 16.0: 0.5x area', 'Scaled aladdin_adder.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'Scaled aladdin_adder.technology from 40.0 to 45.0: 1.7384615384615385x area', 'aladdin_adder area has been scaled 0.8692307692307693x']
2025-05-08 04:10:57 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0.21', 'area': '2.78E+02', 'action': 'read', 'name': 'aladdin_adder', 'n_instances': 1}
2025-05-08 04:10:57 INFO        | value=278.0, matching_attrs=2, log=['Scaling width from 32 to 16', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_adder.width from 32.0 to 16.0: 0.5x area', 'Scaled aladdin_adder.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'Scaled aladdin_adder.technology from 40.0 to 45.0: 1.7384615384615385x area', 'aladdin_adder area has been scaled 0.8692307692307693x']
2025-05-08 04:10:57 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0.0024', 'area': '2.78E+02', 'action': 'leak', 'name': 'aladdin_adder', 'n_instances': 1}
2025-05-08 04:10:57 INFO        | value=278.0, matching_attrs=2, log=['Scaling width from 32 to 16', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_adder.width from 32.0 to 16.0: 0.5x area', 'Scaled aladdin_adder.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'Scaled aladdin_adder.technology from 40.0 to 45.0: 1.7384615384615385x area', 'aladdin_adder area has been scaled 0.8692307692307693x']
2025-05-08 04:10:57 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0', 'area': '2.78E+02', 'action': 'update', 'name': 'aladdin_adder', 'n_instances': 1}
2025-05-08 04:10:57 INFO        | value=278.0, matching_attrs=2, log=['Scaling width from 32 to 16', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_adder.width from 32.0 to 16.0: 0.5x area', 'Scaled aladdin_adder.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'Scaled aladdin_adder.technology from 40.0 to 45.0: 1.7384615384615385x area', 'aladdin_adder area has been scaled 0.8692307692307693x']
2025-05-08 04:10:57 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0', 'area': '2.78E+02', 'action': 'write', 'name': 'aladdin_adder', 'n_instances': 1}
2025-05-08 04:10:57 INFO        | value=278.0, matching_attrs=2, log=['Scaling width from 32 to 16', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_adder.width from 32.0 to 16.0: 0.5x area', 'Scaled aladdin_adder.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'Scaled aladdin_adder.technology from 40.0 to 45.0: 1.7384615384615385x area', 'aladdin_adder area has been scaled 0.8692307692307693x']
2025-05-08 04:10:57 INFO        | Best-matching entry: {'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0.21', 'area': '2.78E+02', 'action': 'add', 'name': 'aladdin_adder', 'n_instances': 1}
2025-05-08 04:10:57 INFO        | Scaling width from 32 to 16
2025-05-08 04:10:57 INFO        | Scaling global_cycle_seconds from 1e-9 to 1e-09
2025-05-08 04:10:57 INFO        | Scaling technology from 40nm to 45nm
2025-05-08 04:10:57 INFO        | Scaled aladdin_adder.width from 32.0 to 16.0: 0.5x area
2025-05-08 04:10:57 INFO        | Scaled aladdin_adder.global_cycle_seconds from 1e-09 to 1e-09: 1x area
2025-05-08 04:10:57 INFO        | Scaled aladdin_adder.technology from 40.0 to 45.0: 1.7384615384615385x area
2025-05-08 04:10:57 INFO        | aladdin_adder area has been scaled 0.8692307692307693x
2025-05-08 04:10:57 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:57 INFO        
2025-05-08 04:10:57 INFO        AREA ESTIMATION for aladdin_multiplier(width_a=8, width_b=8, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-05-08 04:10:57 INFO        Library estimated 689.9519230769231u^2 with accuracy 90%. Messages:
2025-05-08 04:10:57 INFO        | Found 5 entries for aladdin_multiplier.
2025-05-08 04:10:57 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '12.68', 'area(um^2)': '6350', 'action': 'multiply', 'name': 'aladdin_multiplier', 'n_instances': 1}
2025-05-08 04:10:57 INFO        | value=6350.0, matching_attrs=2, log=['Scaling width_a from 32 to 8', 'Scaling width_b from 32 to 8', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_multiplier.width_a from 32.0 to 8.0: 0.25x area', 'Scaled aladdin_multiplier.width_b from 32.0 to 8.0: 0.25x area', 'Scaled aladdin_multiplier.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'Scaled aladdin_multiplier.technology from 40.0 to 45.0: 1.7384615384615385x area', 'aladdin_multiplier area has been scaled 0.10865384615384616x']
2025-05-08 04:10:57 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '12.68', 'area(um^2)': '6350', 'action': 'read', 'name': 'aladdin_multiplier', 'n_instances': 1}
2025-05-08 04:10:57 INFO        | value=6350.0, matching_attrs=2, log=['Scaling width_a from 32 to 8', 'Scaling width_b from 32 to 8', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_multiplier.width_a from 32.0 to 8.0: 0.25x area', 'Scaled aladdin_multiplier.width_b from 32.0 to 8.0: 0.25x area', 'Scaled aladdin_multiplier.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'Scaled aladdin_multiplier.technology from 40.0 to 45.0: 1.7384615384615385x area', 'aladdin_multiplier area has been scaled 0.10865384615384616x']
2025-05-08 04:10:57 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '0.08', 'area(um^2)': '6350', 'action': 'leak', 'name': 'aladdin_multiplier', 'n_instances': 1}
2025-05-08 04:10:57 INFO        | value=6350.0, matching_attrs=2, log=['Scaling width_a from 32 to 8', 'Scaling width_b from 32 to 8', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_multiplier.width_a from 32.0 to 8.0: 0.25x area', 'Scaled aladdin_multiplier.width_b from 32.0 to 8.0: 0.25x area', 'Scaled aladdin_multiplier.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'Scaled aladdin_multiplier.technology from 40.0 to 45.0: 1.7384615384615385x area', 'aladdin_multiplier area has been scaled 0.10865384615384616x']
2025-05-08 04:10:57 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '0', 'area(um^2)': '6350', 'action': 'update', 'name': 'aladdin_multiplier', 'n_instances': 1}
2025-05-08 04:10:57 INFO        | value=6350.0, matching_attrs=2, log=['Scaling width_a from 32 to 8', 'Scaling width_b from 32 to 8', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_multiplier.width_a from 32.0 to 8.0: 0.25x area', 'Scaled aladdin_multiplier.width_b from 32.0 to 8.0: 0.25x area', 'Scaled aladdin_multiplier.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'Scaled aladdin_multiplier.technology from 40.0 to 45.0: 1.7384615384615385x area', 'aladdin_multiplier area has been scaled 0.10865384615384616x']
2025-05-08 04:10:57 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '0', 'area(um^2)': '6350', 'action': 'write', 'name': 'aladdin_multiplier', 'n_instances': 1}
2025-05-08 04:10:57 INFO        | value=6350.0, matching_attrs=2, log=['Scaling width_a from 32 to 8', 'Scaling width_b from 32 to 8', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_multiplier.width_a from 32.0 to 8.0: 0.25x area', 'Scaled aladdin_multiplier.width_b from 32.0 to 8.0: 0.25x area', 'Scaled aladdin_multiplier.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'Scaled aladdin_multiplier.technology from 40.0 to 45.0: 1.7384615384615385x area', 'aladdin_multiplier area has been scaled 0.10865384615384616x']
2025-05-08 04:10:57 INFO        | Best-matching entry: {'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '12.68', 'area(um^2)': '6350', 'action': 'multiply', 'name': 'aladdin_multiplier', 'n_instances': 1}
2025-05-08 04:10:57 INFO        | Scaling width_a from 32 to 8
2025-05-08 04:10:57 INFO        | Scaling width_b from 32 to 8
2025-05-08 04:10:57 INFO        | Scaling global_cycle_seconds from 1e-9 to 1e-09
2025-05-08 04:10:57 INFO        | Scaling technology from 40nm to 45nm
2025-05-08 04:10:57 INFO        | Scaled aladdin_multiplier.width_a from 32.0 to 8.0: 0.25x area
2025-05-08 04:10:57 INFO        | Scaled aladdin_multiplier.width_b from 32.0 to 8.0: 0.25x area
2025-05-08 04:10:57 INFO        | Scaled aladdin_multiplier.global_cycle_seconds from 1e-09 to 1e-09: 1x area
2025-05-08 04:10:57 INFO        | Scaled aladdin_multiplier.technology from 40.0 to 45.0: 1.7384615384615385x area
2025-05-08 04:10:57 INFO        | aladdin_multiplier area has been scaled 0.10865384615384616x
2025-05-08 04:10:57 INFO        | Multiplying by n_instances 1
2025-05-08 04:10:57 INFO        flattened architecture is saved to:
2025-05-08 04:10:57 INFO        ./timeloop-mapper.flattened_architecture.yaml
2025-05-08 04:10:57 INFO        energy reference table is saved to:
2025-05-08 04:10:57 INFO        ./timeloop-mapper.ERT.yaml
2025-05-08 04:10:57 INFO        energy reference table summary is saved to:
2025-05-08 04:10:57 INFO        ./timeloop-mapper.ERT_summary.yaml
2025-05-08 04:10:57 WARNING     no runtime energy estimations are generated... not generating energy_estimation.yaml
2025-05-08 04:10:57 INFO        area reference table is saved to:
2025-05-08 04:10:57 INFO        ./timeloop-mapper.ART.yaml
2025-05-08 04:10:57 INFO        area reference table summary is saved to:
2025-05-08 04:10:57 INFO        ./timeloop-mapper.ART_summary.yaml
